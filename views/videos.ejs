<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Exercise Videos</title>
  <style>
    /*
      Mainly sets up background and text alignment for page
    */
    body {
      font-family: Arial, sans-serif;
      background-color: white;
      margin: 0;
      padding: 20px;
      text-align: center;
    }

    /* Defines color and size of header "Exercise Video" */
    h1 {
      color: black;
      font-size: 4em;
    }

    /* Styles navigation links */
    nav a {
      margin: 0 10px;
      text-decoration: none;
      color: #555;
      font-size: 2em;
      margin: 2em;
    }

    /* Adds underline when mouse hovers over */
    nav a:hover {
      text-decoration: underline;
    }

    /* Adds space below search bar. */
    .search-container {
      margin-bottom: 20px;
    }

    /* Defines search input's background and text color along with size and spacing */
    .search-container input {
      padding: 10px;
      font-size: 1em;
      width: 80%;
      max-width: 400px;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: white;
      color: black;
    }

    /* Sets color of placeholder text in search input */
    .search-container input::placeholder {
      color: #888;
    }

    /*
      Arranges list items (similar to video cards) in grid layout using flexbox
    */
    .list {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 20px;
      margin-top: 30px;
      padding: 0;
      list-style: none;
    }

    /*
      Styles each individual video card
    */
    .video-item {
      background-color: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 15px;
      width: 300px; 
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      text-align: left; 
    }

    /* Styles the title heading within a video card */
    .video-card h3 {
      margin-top: 0;
      color: #333;
      font-size: 1.2em;
    }

    /*
      Sets up container for embedded videos
    */
    .video-container {
      position: relative;
      width: 100%;
      padding-bottom: 60%;
      height: 0;
      overflow: hidden;
      margin-bottom: 10px;
    }

    /*
      Makes actual video fill its container
    */
    .video-container iframe,
    .video-container video {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  </style>
</head>
<body>

  <h1>Exercise Videos</h1>

  <nav>
    <a href="/">Home</a>
    <a href="/games">Games</a>
  </nav>

  <div id="videoGallery">
    <div class="search-container">
      <input
        type="text"
        class="search"
        placeholder="Search by title..."
      />
    </div>
    
    <div class="list">
      <% if (videos && videos.length) { %>
        <% videos.forEach(video => { %>
          <div class="video-item video-card">
            <h3 class="video-title"><%= video.title %></h3>
            <div class="video-container">
              <!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Permissions-Policy#directives -->
              <iframe
                src="<%= video.embedUrl %>"
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                allowfullscreen>
              </iframe>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p class="no-videos">No videos available at the moment.</p>
      <% } %>
    </div>
  </div>

  <script src="//cdnjs.cloudflare.com/ajax/libs/list.js/2.3.1/list.min.js"></script>

  <script>
    // Creates new instance of the List.js object
    var videoList = new List('videoGallery', { // Specifies container element List.js should manage by its ID('videoGallery'), meaning it will look inside this element for list and search input
    valueNames: ['video-title'], // Tells List.js to use text content of elements with class 'video-title' for searching and sorting
    listClass: 'list' // Tells List.js which element in main container 'videoGallery' holds actual list items, so basically looks for elements with class 'list'
  });
  </script>

</body>
</html>